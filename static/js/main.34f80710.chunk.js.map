{"version":3,"sources":["views/main/main.jsx","hooks/form/useForm.js","services/save-user/saveUser.js","services/login-user/loginUser.js","services/update-user/updateUser.js","pages/registration/registration.jsx","pages/login/login.jsx","App.js","serviceWorker.js","index.js"],"names":["MainView","page","title","linkKey","subtitle","linkText","onLinkClick","notification","onNotifyClose","className","src","Link","onClick","e","caption","lowContrast","onCloseButtonClick","useForm","initial","rules","onSubmit","useState","values","setValues","errors","setErrors","formRendered","useRef","useEffect","current","handleBlur","useCallback","event","name","target","invalid","errFunction","errorFound","handleChange","selectedItem","value","gender","handleSubmit","preventDefault","saveUser","user","Promise","resolve","reject","users","JSON","parse","localStorage","getItem","userFound","find","u","email","message","push","setItem","stringify","loginUser","pass","password","updateUser","newUsers","filter","Registration","onNotify","noEmpty","v","lastName","firstName","id","label","company","a","validate","data","kind","inputProps","onBlur","onChange","Grid","FluidForm","Row","Column","TextInput","placeholder","labelText","invalidText","Dropdown","items","titleText","type","Button","Login","forgot","changeView","view","setView","savedEmail","setSavedEmail","resetState","bottomJSX","style","alignItems","Checkbox","textAlign","sm","md","color","cursor","marginRight","App","setNotification","activePage","setActivePage","pages","p","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.34f80710.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { Link, ToastNotification } from \"carbon-components-react\";\r\n\r\nexport default function MainView({\r\n  page,\r\n  title,\r\n  linkKey,\r\n  subtitle,\r\n  linkText,\r\n  onLinkClick,\r\n  notification,\r\n  onNotifyClose,\r\n}) {\r\n  return (\r\n    <div className=\"main-view\">\r\n      <div className=\"main-panel\">\r\n        <div className=\"panel-title\">\r\n          <div className=\"panel-title__head\">Risk-centered</div>\r\n          <div className=\"panel-title__sub\">Vulnerability Management</div>\r\n        </div>\r\n        <div className=\"panel-intro\">\r\n          <div className=\"panel-intro__icon\">\r\n            <img src=\"images/infinity.svg\" />\r\n          </div>\r\n          <div className=\"panel-intro__head\">Security Workflows</div>\r\n          <div className=\"panel-intro__sub\">\r\n            Create and run playbooks to integrate security into your CI/CD\r\n            pi-peline.\r\n          </div>\r\n          <div className=\"three-dots\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"main-content\">\r\n        <div className=\"content-headline\">strobes</div>\r\n        <div className=\"content-title\">\r\n          {title && <div className=\"title__label\">{title}</div>}\r\n          {subtitle && (\r\n            <div className=\"title__link\">\r\n              {subtitle}{\" \"}\r\n              {linkText && (\r\n                <Link onClick={(e) => onLinkClick(e, linkKey)}>{linkText}</Link>\r\n              )}\r\n            </div>\r\n          )}\r\n          {notification && (\r\n            <ToastNotification\r\n              caption=\"\"\r\n              lowContrast\r\n              {...notification}\r\n              onCloseButtonClick={onNotifyClose}\r\n            />\r\n          )}\r\n        </div>\r\n        {page && <div className=\"content-container\">{page}</div>}\r\n        <div className=\"content-copyright\">\r\n          © Copyright Strobes 2020. All Rights Reserved.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect, useRef, useCallback } from \"react\";\r\n\r\nexport default function useForm(initial, rules, onSubmit) {\r\n  const [values, setValues] = useState(initial || {});\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const formRendered = useRef(true);\r\n\r\n  useEffect(() => {\r\n    if (!formRendered.current) {\r\n      setValues(initial);\r\n    }\r\n    formRendered.current = false;\r\n  }, []);\r\n\r\n  const handleBlur = useCallback((event) => {\r\n    if (!event) return;\r\n\r\n    const { target } = event;\r\n    const { name } = target;\r\n\r\n    let invalid = false;\r\n    const errFunction = rules[name];\r\n    if (errFunction) {\r\n      const errorFound = errFunction(values[name]);\r\n      invalid = errorFound === true ? false : errorFound;\r\n    }\r\n    setErrors({ ...errors, [name]: invalid });\r\n  });\r\n\r\n  const handleChange = useCallback((event) => {\r\n    if (!event) return;\r\n\r\n    const { target, selectedItem } = event;\r\n    if (target) {\r\n      const { name, value } = target;\r\n      setValues({ ...values, [name]: value });\r\n    }\r\n    if (selectedItem) {\r\n      setValues({ ...values, gender: selectedItem });\r\n    }\r\n  });\r\n\r\n  const handleSubmit = useCallback((event) => {\r\n    if (!event) return;\r\n\r\n    event.preventDefault();\r\n\r\n    onSubmit({ values, errors });\r\n  });\r\n\r\n  return [values, errors, handleBlur, handleChange, handleSubmit];\r\n}\r\n","export const saveUser = (user = {}) => {\r\n  return new Promise((resolve, reject) => {\r\n    const users = JSON.parse(localStorage.getItem(\"users\") || \"[]\");\r\n    const userFound = users.find((u) => u.email === user.email);\r\n    if (userFound) {\r\n      reject({\r\n        message: \"User already exists\",\r\n        user: userFound,\r\n      });\r\n    } else {\r\n      users.push(user);\r\n      localStorage.setItem(\"users\", JSON.stringify(users));\r\n      resolve({\r\n        message: \"User created successfully\",\r\n        user,\r\n      });\r\n    }\r\n  });\r\n};\r\n","export const loginUser = (email = \"\", pass) => {\r\n  return new Promise((resolve, reject) => {\r\n    const users = JSON.parse(localStorage.getItem(\"users\") || \"[]\");\r\n    const userFound = users.find((u) => u.email === email);\r\n    if (userFound) {\r\n      if (userFound.password === pass) {\r\n        resolve({\r\n          message: \"Login success\",\r\n          user: userFound,\r\n        });\r\n      } else {\r\n        reject({\r\n          message: \"Password is incorrect\",\r\n          user: {},\r\n        });\r\n      }\r\n    } else {\r\n      reject({\r\n        message: `User with ${email} not found`,\r\n        user: {},\r\n      });\r\n    }\r\n  });\r\n};\r\n","export const updateUser = (email = \"\", pass) => {\r\n  return new Promise((resolve, reject) => {\r\n    const users = JSON.parse(localStorage.getItem(\"users\") || \"[]\");\r\n    const userFound = users.find((u) => u.email === email);\r\n    if (userFound) {\r\n      const newUsers = [\r\n        ...users.filter((u) => u.email !== email),\r\n        { ...userFound, password: pass },\r\n      ];\r\n      localStorage.setItem(\"users\", JSON.stringify(newUsers));\r\n      resolve({\r\n        message: \"Password reset successful!\",\r\n        user: userFound,\r\n      });\r\n    } else {\r\n      reject({\r\n        message: `User with ${email} not found`,\r\n        user: {},\r\n      });\r\n    }\r\n  });\r\n};\r\n","import React from \"react\";\r\n\r\nimport {\r\n  FluidForm,\r\n  TextInput,\r\n  Dropdown,\r\n  Column,\r\n  Button,\r\n  Grid,\r\n  Row,\r\n} from \"carbon-components-react\";\r\nimport { ArrowRight16 } from \"@carbon/icons-react\";\r\n\r\nimport { useForm } from \"../../hooks/\";\r\nimport { saveUser } from \"../../services/\";\r\n\r\nexport default function Registration({ onNotify }) {\r\n  const emailRule = (v) => !!v || \"Provide valid email\";\r\n  const noEmpty = (v) => !!v || \"This field is required\";\r\n\r\n  const [values, errors, handleBlur, handleChange, handleSubmit] = useForm(\r\n    {\r\n      email: \"\",\r\n      password: \"\",\r\n      lastName: \"\",\r\n      firstName: \"\",\r\n      gender: { id: \"option-1\", label: \"Male\" },\r\n    },\r\n    {\r\n      email: emailRule,\r\n      company: noEmpty,\r\n      password: noEmpty,\r\n      lastName: noEmpty,\r\n      firstName: noEmpty,\r\n    },\r\n    async ({ values, errors }) => {\r\n      try {\r\n        if (validate(errors)) {\r\n          const data = await saveUser(values);\r\n          onNotify({ kind: \"success\", title: data.message });\r\n        } else {\r\n          onNotify({ kind: \"error\", title: \"Please fill the form\" });\r\n        }\r\n      } catch (err) {\r\n        onNotify({ kind: \"error\", title: err.message });\r\n      }\r\n    }\r\n  );\r\n\r\n  const validate = ({ email, company, password, lastName, firstName }) =>\r\n    email === false &&\r\n    company === false &&\r\n    password === false &&\r\n    lastName === false &&\r\n    firstName === false;\r\n\r\n  const inputProps = {\r\n    onBlur: handleBlur,\r\n    onChange: handleChange,\r\n  };\r\n\r\n  const items = [\r\n    { id: \"option-1\", label: \"Male\" },\r\n    { id: \"option-2\", label: \"Female\" },\r\n    { id: \"option-3\", label: \"Transgender\" },\r\n  ];\r\n\r\n  return (\r\n    <Grid className=\"px-0\">\r\n      <FluidForm onSubmit={handleSubmit}>\r\n        <Row>\r\n          <Column className=\"py-2\">\r\n            <TextInput\r\n              id=\"firstName\"\r\n              {...inputProps}\r\n              name=\"firstName\"\r\n              placeholder=\"John\"\r\n              labelText=\"First Name\"\r\n              value={values.firstName}\r\n              invalid={!!errors.firstName}\r\n              invalidText={errors.firstName}\r\n            />\r\n          </Column>\r\n          <Column className=\"py-2\">\r\n            <TextInput\r\n              id=\"lastName\"\r\n              {...inputProps}\r\n              name=\"lastName\"\r\n              placeholder=\"Doe\"\r\n              labelText=\"Last Name\"\r\n              value={values.lastName}\r\n              invalid={!!errors.lastName}\r\n              invalidText={errors.lastName}\r\n            />\r\n          </Column>\r\n        </Row>\r\n        <Row>\r\n          <Column className=\"py-2\">\r\n            <TextInput\r\n              id=\"company\"\r\n              name=\"company\"\r\n              {...inputProps}\r\n              labelText=\"Company\"\r\n              value={values.company}\r\n              invalid={!!errors.company}\r\n              placeholder=\"Acme Corp Inc\"\r\n              invalidText={errors.company}\r\n            />\r\n          </Column>\r\n          <Column className=\"py-2\">\r\n            <Dropdown\r\n              name=\"gender\"\r\n              items={items}\r\n              label=\"select\"\r\n              {...inputProps}\r\n              titleText=\"I am a\"\r\n              id=\"gender-dropdown\"\r\n              selectedItem={values.gender}\r\n            ></Dropdown>\r\n          </Column>\r\n        </Row>\r\n        <Row>\r\n          <Column className=\"py-2\">\r\n            <TextInput\r\n              id=\"email\"\r\n              name=\"email\"\r\n              {...inputProps}\r\n              labelText=\"Email\"\r\n              value={values.email}\r\n              invalid={!!errors.email}\r\n              invalidText={errors.email}\r\n              placeholder=\"john.doe@example.com\"\r\n            />\r\n          </Column>\r\n          <Column className=\"py-2\">\r\n            <TextInput\r\n              id=\"password\"\r\n              {...inputProps}\r\n              name=\"password\"\r\n              type=\"password\"\r\n              labelText=\"Password\"\r\n              placeholder=\"********\"\r\n              value={values.password}\r\n              invalid={!!errors.password}\r\n              invalidText={errors.password}\r\n            />\r\n          </Column>\r\n        </Row>\r\n        <Button type=\"submit\" className=\"submit-button register-submit\">\r\n          Continue to your free account\r\n          <ArrowRight16 />\r\n        </Button>\r\n        <div className=\"register-disclaimer\">\r\n          By creating a Strobes account, you consent to and fully accept our\r\n          Privacy Policy. Terms of Service apply.\r\n        </div>\r\n      </FluidForm>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useState, Fragment } from \"react\";\r\n\r\nimport {\r\n  FluidForm,\r\n  TextInput,\r\n  Checkbox,\r\n  Column,\r\n  Button,\r\n  Link,\r\n  Grid,\r\n  Row,\r\n} from \"carbon-components-react\";\r\nimport { ArrowRight16, ArrowLeft16 } from \"@carbon/icons-react\";\r\n\r\nimport { useForm } from \"../../hooks/\";\r\nimport { loginUser, updateUser } from \"../../services/\";\r\n\r\nexport default function Login({ forgot, onNotify, changeView }) {\r\n  const [view, setView] = useState(\"email\");\r\n  const [savedEmail, setSavedEmail] = useState(\"\");\r\n  const [values, errors, handleBlur, handleChange, handleSubmit] = useForm(\r\n    { email: \"\" },\r\n    { email: (v) => !!v || \"Provide valid email\" },\r\n    async ({ values, errors: { password } }) => {\r\n      try {\r\n        if (validate(password)) {\r\n          let data;\r\n          if (forgot) {\r\n            data = await updateUser(savedEmail, values.password);\r\n          } else {\r\n            data = await loginUser(savedEmail, values.password);\r\n          }\r\n          onNotify({ kind: \"success\", title: data.message });\r\n        } else {\r\n          onNotify({ kind: \"error\", title: \"Please fill the form\" });\r\n        }\r\n      } catch (err) {\r\n        onNotify({ kind: \"error\", title: err.message });\r\n      }\r\n    }\r\n  );\r\n\r\n  function handleEmailSubmit() {\r\n    if (validate(errors.email)) {\r\n      setView(\"pass\");\r\n      setSavedEmail(values.email);\r\n    } else {\r\n      onNotify({ kind: \"error\", title: \"Please enter a valid email\" });\r\n      resetState();\r\n    }\r\n  }\r\n\r\n  function resetState() {\r\n    setView(\"email\");\r\n    setSavedEmail(\"\");\r\n  }\r\n\r\n  const validate = (email) => email === false;\r\n\r\n  const bottomJSX = () => {\r\n    return (\r\n      <Fragment>\r\n        {!forgot && (\r\n          <Row className=\"py-2 my-2\" style={{ alignItems: \"center\" }}>\r\n            <Column>\r\n              <Checkbox labelText=\"Remember me\" id=\"remeber-check\" />\r\n            </Column>\r\n            <Column style={{ textAlign: \"right\" }}>\r\n              <Link\r\n                className=\"my-2\"\r\n                onClick={() => {\r\n                  resetState();\r\n                  changeView(\"Trouble logging in?\");\r\n                }}\r\n              >\r\n                Forgot Password\r\n              </Link>\r\n            </Column>\r\n          </Row>\r\n        )}\r\n        <Row className=\"py-2 my-2\">\r\n          <Column>\r\n            <Link\r\n              className=\"my-2\"\r\n              onClick={() => {\r\n                resetState();\r\n                changeView(\"Log in\");\r\n              }}\r\n            >\r\n              {forgot ? \"Go back to Log in\" : \"Alternative Login\"}\r\n            </Link>\r\n          </Column>\r\n        </Row>\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Grid className=\"px-0\">\r\n      <FluidForm onSubmit={handleSubmit}>\r\n        {view === \"email\" && (\r\n          <Row>\r\n            <Column sm={12} md={6}>\r\n              <div className=\"login-title\">Enter your Strobes ID</div>\r\n              <TextInput\r\n                id=\"email\"\r\n                name=\"email\"\r\n                labelText=\"Email\"\r\n                onBlur={handleBlur}\r\n                value={values.email}\r\n                onChange={handleChange}\r\n                invalid={!!errors.email}\r\n                invalidText={errors.email}\r\n                placeholder=\"john.doe@example.com\"\r\n              />\r\n              <Button\r\n                onClick={handleEmailSubmit}\r\n                className=\"submit-button my-0\"\r\n              >\r\n                Continue\r\n                <ArrowRight16 />\r\n              </Button>\r\n              {bottomJSX()}\r\n            </Column>\r\n          </Row>\r\n        )}\r\n        {view === \"pass\" && (\r\n          <Row>\r\n            <Column sm={12} md={6}>\r\n              <div className=\"login-title\">\r\n                {!forgot && (\r\n                  <ArrowLeft16\r\n                    color=\"#0F62FE\"\r\n                    onClick={() => setView(\"email\")}\r\n                    style={{ cursor: \"pointer\", marginRight: \"8px\" }}\r\n                  />\r\n                )}\r\n                <div>{`${forgot ? \"New password for \" : \"\"}${savedEmail}`}</div>\r\n              </div>\r\n              <TextInput\r\n                id=\"password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                labelText=\"Password\"\r\n                onBlur={handleBlur}\r\n                placeholder=\"********\"\r\n                value={values.password}\r\n                onChange={handleChange}\r\n                invalid={!!errors.password}\r\n                invalidText={errors.password}\r\n              />\r\n              <Button type=\"submit\" className=\"submit-button my-0\">\r\n                Continue\r\n                <ArrowRight16 />\r\n              </Button>\r\n              {bottomJSX()}\r\n            </Column>\r\n          </Row>\r\n        )}\r\n      </FluidForm>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\n\nimport { MainView } from \"./views/\";\nimport { Login, Forgot, Registration } from \"./pages/\";\n\nfunction App() {\n  const [notification, setNotification] = useState(null);\n  const [activePage, setActivePage] = useState(\"Trouble logging in?\");\n\n  const pages = [\n    {\n      title: \"Register\",\n      linkKey: \"Log in\",\n      linkText: \"Log in\",\n      page: <Registration onNotify={setNotification} />,\n      subtitle: \"Already have an account?\",\n    },\n    {\n      title: \"Trouble logging in?\",\n      page: (\n        <Login\n          forgot\n          onNotify={setNotification}\n          changeView={(v) => setActivePage(v)}\n        />\n      ),\n      subtitle: \"Reset your account password.\",\n    },\n    {\n      title: \"Log in\",\n      linkKey: \"Register\",\n      linkText: \"Register now\",\n      page: (\n        <Login\n          onNotify={setNotification}\n          changeView={(v) => setActivePage(v)}\n        />\n      ),\n      subtitle: \"Don’t have an account?\",\n    },\n  ];\n\n  function handleLinkClick(e, title) {\n    setActivePage(title);\n  }\n\n  function currentMainView() {\n    return pages.find((p) => p.title === activePage);\n  }\n\n  return (\n    <div className=\"App\">\n      <MainView\n        {...currentMainView()}\n        notification={notification}\n        onLinkClick={handleLinkClick}\n        onNotifyClose={() => setNotification(null)}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}